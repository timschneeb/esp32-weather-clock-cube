; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[env:esp32-s3-devkitm-1]
platform = espressif32 @ 6.12.0
board = esp32-s3-devkitm-1
board_build.partitions = partitions_16MB.csv
board_build.arduino.memory_type = qio_opi
board_build.flash_mode = qio
board_build.psram_type = opi
board_upload.flash_size = 16MB
board_upload.maximum_size = 16777216
framework = espidf, arduino
monitor_speed = 115200
upload_speed = 410000
build_flags = 
	-DBOARD_HAS_PSRAM
	-DARDUINO_USB_MODE=1
	-DARDUINO_USB_CDC_ON_BOOT=0
	-DCORE_DEBUG_LEVEL=5
	; TFT_eSPI settings
	-D USER_SETUP_LOADED=1
	-D ST7789_2_DRIVER=1
	-D TFT_RGB_ORDER=1
	-D TFT_WIDTH=240
	-D TFT_HEIGHT=240
	-D TFT_MISO=-1
	-D TFT_MOSI=11
	-D TFT_SCLK=12
	-D TFT_CS=15
	-D TFT_DC=7
	-D TFT_RST=6
	-D TFT_BL=14
	-D TOUCH_CS=-1
	-D LOAD_GLCD=1
	-D SPI_FREQUENCY=80000000
	-D SPI_READ_FREQUENCY=20000000
	; Workaround for esp32@6.7.0+ and TFT_eSPI: https://github.com/Bodmer/TFT_eSPI/issues/3329
	-D USE_HSPI_PORT

	; Setup LVGL config header
	-D LV_CONF_INCLUDE_SIMPLE
	-D LV_LVGL_H_INCLUDE_SIMPLE
	; Use C++20 and set include paths
	-std=gnu++2a
	-I src
	-I src/gui
build_unflags =
	-std=gnu++11
lib_deps =
	ESP32Async/AsyncTCP@3.4.8
	ESP32Async/ESPAsyncWebServer@3.8.1
	bblanchon/ArduinoJson@^7.4.2
	lennarthennigs/Button2@^2.4.1
	lvgl/lvgl@^9.3.0
	bodmer/TFT_eSPI@^2.5.43
extra_scripts = 
	pre:scripts/auto_buildfs.py
	pre:scripts/merge_bin.py

[platformio]
build_cache_dir = .build_cache
